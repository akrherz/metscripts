#!/bin/csh -f
#
# Copyright (c)1993 UCAR/Unidata
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose without fee is hereby granted, provided
# that the above copyright notice appear in all copies, that both that
# copyright notice and this permission notice appear in supporting
# documentation, and that the name of UCAR/Unidata not be used in
# advertising or publicity pertaining to distribution of the software
# without specific, written prior permission.  UCAR makes no
# representations about the suitability of this software for any purpose.
# It is provided "as is" without express or implied warranty.  It is
# provided with no support and without obligation on the part of UCAR or
# Unidata, to assist in its use, correction, modification, or enhancement.
#
# nids_links:Set up links to the directory containing McIDAS AREA files.
#
#            The date,time, platform, and resolution are determined 
#            by opening the AREA file and extracting the valid time 
#            information using a program called areaInfo.
#
#            areaInfo returns 3 strings: 
#                TYPE_yymmdd_hhmm  Platform Resolution
#
#            TYPE is IR, VIS, WV
#            
#            Platform is one of the reconized satellite types:
#                GOES-7, GOES-8, GOES-9, etc.
#            
#            Resolution is the resolution of the image such as:
#                1km, 2km, 4km, 8km, 16km, 24km
#
#            The links have the file naming convention neccessary for NSAT.
#            platform/resolution/type_yymmdd_hhmm
#
#            The old links are scoured to the number in KEEP
#
# Create a crontab entry like:
# 5,15,25,35,45 * * * * /bin/csh /home/nawips/bin/scripts/nsat_links 1>>/dev/null 2>&1
#
# programs used:  areaInfo    - extract header information from area files.
#
# LOG:
# M.Wright/Unidata		Wrote areatomca
# P.Bruehl/Unidata	10/94	Recast areatomca to arealinks for GEMPAK use
# Chiz			12/95	Rewritten for nsat
#				New areaInfo to identify GOES-8 & GOES-9
#
###############################################################################
# User specified variables:
#
# Load the Gempak configuration
source /home/ldm/nawips/Gemenviron
#source /home/ldm/NAWIPS-5.4/Gemenviron
#
# Directory holding the AREA files:
#
set areadir=/data/mcidas

# Directory to hold the links 

set NSAT=/data/gempak/images/sat

############################################################################## 
# AREA files via IDD
# AREA012x = Goes-W vis  (Goes-7 / Goes-9)
# AREA013x = Goes-W ir   (Goes-7 / Goes-9)
# AREA017x = Goes-W wv   (Goes-7 / Goes-9)
# AREA014x = Goes-E vis  (GOES-8)
# AREA015x = Goes-E ir   (GOES-8)
# AREA021x = Goes-E wv   (GOES-8)
# AREA016x = Floater

set AREAS=("012" "013" "017" "016" "019" "006")
#set AREAS=("012" "013" "014" "015" "017" "021" "016" "019" "006")
set KEEP=10

cd $areadir

@ COUNT = 1
while($COUNT <= $#AREAS)
   foreach file (`ls -lt [aA][rR][eE][aA]$AREAS[$COUNT]? | awk '{print$NF}'`)
      set INFO=`$GEMEXE/areaInfo $file`
      set FILENAME=$INFO[1]
      set SAT=$INFO[2]
      set RES=$INFO[3]
      if($AREAS[$COUNT] == '006') then
         set SAT=${SAT}_fl2
      endif
      if($AREAS[$COUNT] == '016') then
         set SAT=${SAT}_fl1
      endif
      if($AREAS[$COUNT] == '019') then
         set SAT=ANTARCTIC
      endif
      set NEWDIR=`echo $FILENAME | cut -f1 -d_`
      set PATH_FILE=${NSAT}/$SAT/$RES/$NEWDIR/$FILENAME
      if(! -e ${NSAT}/$SAT) then
         mkdir ${NSAT}/$SAT
      endif
      if(! -e ${NSAT}/$SAT/$RES) then
         mkdir ${NSAT}/$SAT/$RES
      endif
      if(! -e ${NSAT}/$SAT/$RES/$NEWDIR) then
         mkdir ${NSAT}/$SAT/$RES/$NEWDIR
      endif
      if(! -e $PATH_FILE) then
#         ln -s $areadir/$file $PATH_FILE
         cp -f $areadir/$file $PATH_FILE
      endif
   end
   @ COUNT = $COUNT + 1
end

exit(0)
echo start scour
cd $NSAT
set SATS=`ls -d GOES* noa1? met* gms*`
foreach SAT ($SATS)
   if(-d $SAT) then
      cd $SAT
      set SUBS=`ls -d *km`
      foreach RES ($SUBS)
         if(-d $RES) then
            cd $RES
            set TYPES=`ls -d *`
            foreach TYPE ($TYPES)
               if(-d $TYPE) then
                  cd $TYPE
                  set FILES=`ls -r ${TYPE}_*`
                  if(($status == 0)&&($#FILES > $KEEP)) then
                     @ SCOUR = $KEEP + 1
                     while($SCOUR <= $#FILES)
                        rm $FILES[${SCOUR}]
                        @ SCOUR = $SCOUR + 1
                     end
                  else
                     echo Nothing to scour in $NSAT/$SAT/$RES/$TYPE
                  endif
                  set FILES=`find ./${TYPE}_* -mtime +10 -exec rm -f {} \;`
                  set ISEMPTY=`ls`
                  cd ..
                  if($#ISEMPTY == 0) then
                     rmdir $TYPE
                  endif
               endif
            end
            set ISEMPTY=`ls`
            cd ..
            if($#ISEMPTY == 0) then
               rmdir $RES
            endif
         endif
      end
      set ISEMPTY=`ls`
      cd ..
      if($#ISEMPTY == 0) then
         rmdir $SAT
      else
         echo these are subs $SUBS
      endif
   endif
end
exit(0)
